# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Apperance

# Colors (gruvbox theme)
set {
	$black		#282828
	$red		#cc241d
	$green		#98971a
	$yellow		#d79921
	$blue		#458588
	$purple		#b16286
	$aqua		#689d6a
	$gray		#a89984
	$brgray		#928374
	$brred		#fb4934
	$brgreen	#b8bb26
	$bryellow	#fabd2f
	$brblue		#83a598
	$brpurple	#d3869b
	$braqua		#8ec07c
	$white		#ebdbb2

	$a		e0
	$focused	$braqua
	$inactive	$purple
	$unfocused	$black
	$urgent		$yellow
}

# Border colors (see `man 5 sway`)
# class			border		titlebar bg	text	indicator
client.focused		$focused	$focused	$black	$brred
client.focused_inactive $inactive	$inactive	$white	$red
client.unfocused	$unfocused	$unfocused	$white	$red
client.urgent		$urgent		$urgent		$black	$red

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# Set the terminal
set $term kitty

# Lock screen with background image

exec swaylock

bindsym $mod+p exec pcmanfm

bindsym $mod+shift+m exec swaylock


# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
#set $rofi_cmd rofi \
#        -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland
# set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi

### Output configuration
#


# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
output * bg /home/tanjusay/Downloads/satellite.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
    timeout 300 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    timeout 600 'swaylock' \
    before-sleep 'swaylock -f -c 000000'

### Input configuration
#
# Example configuration:
#
input "type:touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
# Keyboard
input type:keyboard {
	xkb_layout jp
	xkb_options grp:caps_toggle
}

### Touchpad bindings

bindgesture {
	# Workspaces
	swipe:3:right workspace prev
	swipe:3:left workspace next

	# Kill active window
	# swipe:3:down kill

	# Toggle floating
	# swipe:3:up floating toggle

	# Move active window
	swipe:4:left move left
	swipe:4:right move right
	swipe:4:up move up
	swipe:4:down move down
}

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec kitty

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    #bindsym $mod+d exec $menu
    #bindsym $mod+d exec pkill -x wofi; wofi --show run
    bindsym $mod+d exec wofi --show drun
    bindsym $mod+shift+w exec firefox

    # Bind Mod+d to run wofi and focus it if it's already running

# Check if wofi is running and only run it if not, otherwise focus it

# Bind Mod+d to launch wofi, but only if it's not running

bindsym $mod+space exec --no-startup-id \
    pgrep -x "wofi" > /dev/null || wofi --show drun

# Focus wofi window if it's already running
# for_window [class="wofi --show drun"] focus



    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)

    #bindsym $mod+Shift+e exec swaynag -t warning -m '  You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec wlogout


#



# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

# Assign Terminal to Workspace 1
assign [class="Alacritty"] workspace number 1
assign [class="kitty"] workspace number 1
assign [class="foot"] workspace number 1

# Assign Browser to Workspace 2
assign [class="firefox"] workspace number 2
assign [class="Google-chrome"] workspace number 2
assign [class="Brave-browser"] workspace number 2
assign [class="chromium"] workspace number 2

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#


# Gaps settings
smart_gaps off
gaps {
	inner 3
	outer 2
}
# Border settings
# normal = w/ titlebar, pixel = w/o titlebar, none = disable
smart_borders on
default_border pixel 1
default_floating_border normal 1

# Titlebar settings
titlebar_border_thickness 0
titlebar_padding 10 1

include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
